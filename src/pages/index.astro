---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

// 获取最新的生活分享和读书笔记
const lifeEntries = await getCollection('life');
const readingEntries = await getCollection('reading');

const allEntries = [...lifeEntries, ...readingEntries].sort((a, b) => 
  b.data.date.valueOf() - a.data.date.valueOf()
).slice(0, 10);
---

<Layout title="VERSION.ME">
	<div class="bg-black py-10 mb-8">
		<div class="max-w-4xl mx-auto px-4">
			<h1 class="text-white text-4xl md:text-5xl font-bold mb-4">VERSION.ME</h1>
			<div class="h-28 md:h-16">
				<p class="text-gray-300 text-base md:text-lg font-medium typewriter">
					<span class="typewriter-text">Remembering that you are going to die is the best way I know to avoid the trap of thinking you have something to lose.</span>
				</p>
			</div>
		</div>
	</div>

	<main class="max-w-4xl mx-auto px-4">
		<div class="space-y-4">
			{allEntries.map(entry => (
				<article class="bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-shadow">
					<div class="px-4 py-4">
						<div class="flex items-baseline justify-between gap-x-4 mb-2">
							<h2 class="text-lg font-semibold truncate">
								<a href={`/${entry.collection}/${entry.slug}`} class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400">
									{entry.collection === 'reading' && <span class="text-gray-500 dark:text-gray-400">读书有感：</span>}{entry.data.title}
								</a>
							</h2>
							<time datetime={entry.data.date.toISOString()} class="text-sm text-gray-500 dark:text-gray-400 whitespace-nowrap">
								{entry.data.date.toLocaleDateString('zh-CN', {
									year: 'numeric',
									month: 'numeric',
									day: 'numeric'
								})}
							</time>
						</div>

						{entry.collection === 'reading' && (
							<div class="mb-2">
								{entry.data.book.rating && (
									<div class="flex items-center mt-1">
										<div class="text-yellow-500 flex">
											{Array.from({ length: entry.data.book.rating }).map((_, i) => (
												<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
													<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
												</svg>
											))}
											{Array.from({ length: 5 - (entry.data.book.rating || 0) }).map((_, i) => (
												<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-300 dark:text-gray-600" viewBox="0 0 20 20" fill="currentColor">
													<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
												</svg>
											))}
										</div>
									</div>
								)}
							</div>
						)}

						<div class="flex flex-wrap gap-1.5 mb-2">
							{entry.data.tags && entry.data.tags.map(tag => (
								<span class={`inline-flex items-center px-2 py-0.5 text-xs font-medium rounded ${
									entry.collection === 'reading' 
									? 'text-blue-700 bg-blue-50 dark:text-blue-300 dark:bg-blue-900'
									: 'text-purple-700 bg-purple-50 dark:text-purple-300 dark:bg-purple-900'
								}`}>
									{tag}
								</span>
							))}
						</div>

						{entry.data.description && (
							<p class="text-gray-600 dark:text-gray-300 text-sm line-clamp-2 mb-2">
								{entry.data.description}
							</p>
						)}
					</div>
				</article>
			))}
		</div>
	</main>
</Layout>

<style>
	.line-clamp-2 {
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
</style>
